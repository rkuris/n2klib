// class IsoAddressClaim

// Automatically generated by mkmsgs - DO NOT EDIT
// Description: ISO Address Claim
#include "../n2k.h"
namespace n2k {
  class IsoAddressClaim : public Message {
  public:
    enum class DeviceClass:unsigned char {
      Reserved_for_2000_Use = 0,
      System_tools = 10,
      Safety_systems = 20,
      Internetwork_device = 25,
      Electrical_Distribution = 30,
      Electrical_Generation = 35,
      Steering_and_Control_surfaces = 40,
      Propulsion = 50,
      Navigation = 60,
      Communication = 70,
      Sensor_Communication_Interface = 75,
      Instrumentation_general_systems = 80,
      External_Environment = 85,
      Internal_Environment = 90,
      Deck_cargo_fishing_equipment_systems = 100,
      Display = 120,
      Entertainment = 125
    };

    enum class IndustryGroup:unsigned char {
      Global = 0,
      Highway = 1,
      Agriculture = 2,
      Construction = 3,
      Marine = 4,
      Industrial = 5
    };

    IsoAddressClaim() {};
    IsoAddressClaim(const Message &m) : Message(m) {};
    unsigned long getUniqueNumber() { return Get(0,21); };
    unsigned short getManufacturerCode() { return Get(21,11); };
    unsigned char getDeviceInstanceLower() { return Get(32,3); };
    unsigned char getDeviceInstanceUpper() { return Get(35,5); };
    unsigned char getDeviceFunction() { return Get(40,8); };
    DeviceClass getDeviceClass() { return (DeviceClass)Get(49,7); };
    unsigned char getSystemInstance() { return Get(56,4); };
    IndustryGroup getIndustryGroup() { return (IndustryGroup)Get(60,3); };
    static const pgn_t PGN = 60928;
    static const PGNType Type = PGNType::Single;
    pgn_t getPGN() { return PGN; }
  };
}
